<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.em.core.auth.mappers.AuthOperatorFunctionMapper" >
  <resultMap id="BaseResultMap" type="com.em.core.auth.operator.function.entity.AuthOperatorFunction" >
    <id column="AUTH_TYPE" property="authType" jdbcType="VARCHAR" />
    <id column="FUNC_ID" property="funcId" jdbcType="VARCHAR" />
    <id column="OPERATOR_ID" property="operatorId" jdbcType="VARCHAR" />
    <result column="APP_ID" property="appId" jdbcType="VARCHAR" />
    <result column="FUNC_GROUP_ID" property="funcGroupId" jdbcType="VARCHAR" />
    <result column="START_DATE" property="startDate" jdbcType="VARCHAR" />
    <result column="END_DATE" property="endDate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    AUTH_TYPE, FUNC_ID, OPERATOR_ID, APP_ID, FUNC_GROUP_ID, START_DATE, END_DATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from AUTH_OPERATOR_FUNCTION
    where AUTH_TYPE = #{authType,jdbcType=VARCHAR}
      and FUNC_ID = #{funcId,jdbcType=VARCHAR}
      and OPERATOR_ID = #{operatorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    DELETE FROM AUTH_OPERATOR_FUNCTION
    WHERE
    	1=2
	    <if test="_parameter != null" >
	     OR  OPERATOR_ID = #{_parameter}
	    </if> 
  </delete>
  <insert id="insert" parameterType="com.em.core.auth.operator.function.entity.AuthOperatorFunction" >
    insert into AUTH_OPERATOR_FUNCTION (AUTH_TYPE, FUNC_ID, OPERATOR_ID, 
      APP_ID, FUNC_GROUP_ID, START_DATE, 
      END_DATE)
    values (#{authType,jdbcType=VARCHAR}, #{funcId,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, 
      #{appId,jdbcType=VARCHAR}, #{funcGroupId,jdbcType=VARCHAR}, #{startDate,jdbcType=VARCHAR}, 
      #{endDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertByMap" parameterType="map" >
    INSERT INTO AUTH_OPERATOR_FUNCTION (OPERATOR_ID, FUNC_ID, AUTH_TYPE, 
      APP_ID, FUNC_GROUP_ID, START_DATE, 
      END_DATE)
    VALUES (#{OPERATOR_ID}, #{FUNC_ID}, #{AUTH_TYPE}, 
      #{APP_ID}, #{FUNC_GROUP_ID}, #{START_DATE}, 
      #{END_DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.em.core.auth.operator.function.entity.AuthOperatorFunction" >
    insert into AUTH_OPERATOR_FUNCTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authType != null" >
        AUTH_TYPE,
      </if>
      <if test="funcId != null" >
        FUNC_ID,
      </if>
      <if test="operatorId != null" >
        OPERATOR_ID,
      </if>
      <if test="appId != null" >
        APP_ID,
      </if>
      <if test="funcGroupId != null" >
        FUNC_GROUP_ID,
      </if>
      <if test="startDate != null" >
        START_DATE,
      </if>
      <if test="endDate != null" >
        END_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authType != null" >
        #{authType,jdbcType=VARCHAR},
      </if>
      <if test="funcId != null" >
        #{funcId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="funcGroupId != null" >
        #{funcGroupId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.em.core.auth.operator.function.entity.AuthOperatorFunction" >
    update AUTH_OPERATOR_FUNCTION
    <set >
      <if test="appId != null" >
        APP_ID = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="funcGroupId != null" >
        FUNC_GROUP_ID = #{funcGroupId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        START_DATE = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        END_DATE = #{endDate,jdbcType=VARCHAR},
      </if>
    </set>
    where AUTH_TYPE = #{authType,jdbcType=VARCHAR}
      and FUNC_ID = #{funcId,jdbcType=VARCHAR}
      and OPERATOR_ID = #{operatorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.em.core.auth.operator.function.entity.AuthOperatorFunction" >
    update AUTH_OPERATOR_FUNCTION
    set APP_ID = #{appId,jdbcType=VARCHAR},
      FUNC_GROUP_ID = #{funcGroupId,jdbcType=VARCHAR},
      START_DATE = #{startDate,jdbcType=VARCHAR},
      END_DATE = #{endDate,jdbcType=VARCHAR}
    where AUTH_TYPE = #{authType,jdbcType=VARCHAR}
      and FUNC_ID = #{funcId,jdbcType=VARCHAR}
      and OPERATOR_ID = #{operatorId,jdbcType=VARCHAR}
  </update>
  <select id="query" resultMap="BaseResultMap" parameterType="com.em.core.auth.operator.function.entity.AuthOperatorFunction" >
    SELECT
    <include refid="Base_Column_List" />
    FROM AUTH_OPERATOR_FUNCTION
    WHERE 1=1
  </select>
  <select id="queryByMap" resultMap="BaseResultMap" parameterType="map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM AUTH_OPERATOR_FUNCTION
    WHERE 1=1
  </select>
  <insert id="batchInsert" parameterType="List">
	INSERT INTO AUTH_OPERATOR_ROLE (OPERATOR_ID, ROLE_ID) VALUES
	<foreach collection="list" item="record" index="index" separator=",">
		( #{record.OPERATOR_ID}, #{record.ROLE_ID} )
	</foreach>
  </insert>
</mapper>